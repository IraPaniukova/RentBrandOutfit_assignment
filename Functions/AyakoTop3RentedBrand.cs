using System;
using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using Microsoft.Data.SqlClient;
using System.Collections.Generic;
using Functions.Models;

namespace Functions
{
    ///////Ayako 22/10/2023
    public static class AyakoTop3RentedBrand
    {
        [FunctionName("AyakoTop3RentedBrand")]
        public static async Task<IActionResult> Run(
            [HttpTrigger(AuthorizationLevel.Function, "get", "post", Route = null)] HttpRequest req,
            ILogger log)
        {
            log.LogInformation("C# HTTP trigger function processed a request.");
            // no input as it returns each brand with total sold price 

            var connection = "Server=citizen.manukautech.info,6304;Database=CC2023_Group1_Project;UID=CC2023_Group1;PWD=fBit$65632;encrypt=true;trustservercertificate=true"; // our database connection string 

            using (SqlConnection con = new SqlConnection(connection))
            {

                con.Open(); // open connection 
                List<BrandandTotalPrice> top3Brands = new List<BrandandTotalPrice>(); // list for beands 
                string query = "select top 3 Brand.BrandName,sum(RentedProduct.RentTotalPrice) as total from RentedProduct \r\njoin Product on RentedProduct.ProductID = Product.ProductID join Brand \r\non Brand.BrandID = Product.BrandID group by Brand.BrandName order by total desc";

                using (SqlCommand cmd = new SqlCommand(query, con))
                {

                    using (SqlDataReader reader = cmd.ExecuteReader()) // read each record generated by query 
                    {

                        while (reader.Read())
                        {
                            BrandandTotalPrice b = new BrandandTotalPrice
                            {

                                BrandName = reader["BrandName"].ToString(),
                                TotalPrice = Convert.ToDecimal(reader["total"])
                                




                            };

                            top3Brands.Add(b);


                        }

                    }



                }

                string Json = JsonConvert.SerializeObject(top3Brands); // convert to Json string 

                return new OkObjectResult(Json); // retrun to controller 

            }
        }
    }
}
